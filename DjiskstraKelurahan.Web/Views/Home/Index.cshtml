@inject IKelurahanService KelurahanService

@model IndexVM

@{
    ViewData["Title"] = "Home Page";
    var daftarKelurahan = KelurahanService.GetAll();
}

<form asp-action="Index" method="post">
    <div class="row">
        <div class="col ml-3">
            <label asp-for="@Model.Start" class="form-label">Start</label>
            <select asp-for="@Model.Start" class="form-control">
                @foreach (var kelurahan in daftarKelurahan)
                {
                    <option value="@kelurahan.Nama">@kelurahan.Nama</option>
                }
            </select>
        </div>
        <div class="col ml-3">
            <label asp-for="@Model.End" class="form-label">End</label>
            <select asp-for="@Model.End" class="form-control">
                @foreach (var kelurahan in daftarKelurahan)
                {
                    <option value="@kelurahan.Nama">@kelurahan.Nama</option>
                }
            </select>
        </div>
    </div>
    @if (Model.Path is not null)
    {
        <div class="row">
            <div class="col ml-3">
                Total Cost : @Model.Path.Value.cost
            </div>
            <div class="col ml-3">
                Jalur :
                @for (int i = 0; i < Model.Path.Value.path.Count; i++)
                {
                    var p = Model.Path.Value.path[i];
                    @($"{p.Value.Nama}{(i < Model.Path.Value.path.Count - 1 ? " -> " : "")}")
                }
            </div>
        </div>
    }
    <div class="row">
        <div class="col my-3">
            <button class="btn btn-primary" type="submit">Djikstra</button>
        </div>
    </div>
</form>

<div class="row h-100">

    @if (Model.Origin is not null && Model.Destinations is not null && Model.Path is not null)
    {
        var origin = $"place_id:{Model.Origin.PlaceId}";

        var destination = $"place_id:{Model.Destinations.PlaceId}";

        var waypoints = Model.Path.Value.path
        .Where(p => p.Value != Model.Origin && p.Value != Model.Destinations)
        .Select(p => $"place_id:{p.Value.PlaceId}").ToList();

        var waypoint = waypoints.Count > 0 ? $"&waypoints={string.Join("|", waypoints)}" : "";

        @* <iframe width="450"
    height="450"
    frameborder="0" style="border:0"
    referrerpolicy="no-referrer-when-downgrade"
    src="https://www.google.com/maps/embed/v1/directions?key=@(MapsAPIConfiguration.ApiKey)&origin=@(origin)&destination=@(destination)@(waypoint)"
    allowfullscreen>
    </iframe> *@
    }
</div>

<style>
    #map {
        width: 100%;
        height: 400px;
    }
</style>
<div id="map"></div>

@section Scripts {
    <partial name="_MapsApiPartial" />

    <script type="text/javascript">
        let map;

        
        async function initMap() {
            let daftarKelurahan;

            const response = await fetch("/kelurahans");
            if (response.ok) {
                daftarKelurahan = await response.json();

                console.log(daftarKelurahan);
            }

            const pos = { lat: - 10.17696822001329, lng: 123.60338374889992 };

            const { Map } = await google.maps.importLibrary("maps");
            const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");

            // The map, centered at Uluru
            map = new Map(document.getElementById("map"), {
                zoom: 13,
                center: pos,
                mapId: "DEMO_MAP_ID"
            });

            // The marker, positioned at Uluru
            const markers = [];

            for(let kelurahan of daftarKelurahan) {
                const contentString =
                    '<div id="content">' +
                    '<div id="siteNotice">' +
                    "</div>" +
                    '<h1 id="firstHeading" class="firstHeading">Kantor Lurah ' + kelurahan.nama + '</h1>' +
                    '<div id="bodyContent">' +
                    "</div>" +
                    "</div>";

                const infoWindow = new google.maps.InfoWindow({
                    ariaLabel: kelurahan.nama,
                    content: contentString
                });

                const m = new AdvancedMarkerElement({
                    map: map,
                    position: { lat: kelurahan.koordinat.x, lng: kelurahan.koordinat.y },
                    title: kelurahan.nama
                });

                m.addListener("click", () => {
                    infoWindow.open({
                        anchor: m,
                        map
                    });
                });

                infoWindow.addListener("visible", () => infoWindow.focus());

                map.addListener("click", () => infoWindow.close());

                markers.push(m);
            }
        }

        initMap();
    </script>
}